<plugin name='localizations' version='1.4.4.6' grailsVersion='2.0 &gt; *'>
  <author>Paul Fernley</author>
  <authorEmail>paul@pfernley.orangehome.co.uk</authorEmail>
  <title>Localizations (messages) plugin</title>
  <description>This plugin will pull i18n definitions from the database rather than from the standard properties files in the i18n folder.

It will do the following:
* Create a domain class and corresponding table called Localization
* Prepopulate the table with all the message properties it finds in the i18n folder
* Ensure Grails writes i18n messages based on what it finds in the database rather than the 118n folder

In addtion the plugin also has these added features to help you:
* A CRUD UI to add, delete, and update i18n messages
* A cache for increased speed 
* A JSONP action which can be useful in client-side templating.

Asumptions:
* Your database supports unicode
* Your application has a layout called main
</description>
  <documentation>https://github.com/halfbaked/grails-localizations</documentation>
  <type>LocalizationsGrailsPlugin</type>
  <resources>
    <resource>LocalizationsBootStrap</resource>
    <resource>org.grails.plugins.localization.LocalizationController</resource>
    <resource>org.grails.plugins.localization.Localization</resource>
    <resource>org.grails.plugins.localization.LocalizationService</resource>
    <resource>org.grails.plugins.localization.LocalizationTagLib</resource>
  </resources>
  <repositories>
    <repository name='grailsCentral' url='http://grails.org/plugins' />
    <repository name='http://repo.grails.org/grails/core' url='http://repo.grails.org/grails/core/' />
    <repository name='mavenCentral' url='http://repo1.maven.org/maven2/' />
  </repositories>
  <dependencies />
  <plugins />
  <runtimePluginRequirements />
  <behavior />
</plugin>